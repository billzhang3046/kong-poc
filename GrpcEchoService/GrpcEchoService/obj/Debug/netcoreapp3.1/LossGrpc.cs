// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/loss.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcEchoService {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Loss
  {
    static readonly string __ServiceName = "loss.Loss";

    static readonly grpc::Marshaller<global::GrpcEchoService.GetResultRequest> __Marshaller_loss_GetResultRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcEchoService.GetResultRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcEchoService.GetEventResultResponse> __Marshaller_loss_GetEventResultResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcEchoService.GetEventResultResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcEchoService.CountIntegerRequest> __Marshaller_loss_CountIntegerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcEchoService.CountIntegerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcEchoService.CountIntegerResponse> __Marshaller_loss_CountIntegerResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcEchoService.CountIntegerResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcEchoService.GetResultRequest, global::GrpcEchoService.GetEventResultResponse> __Method_GetEventResult = new grpc::Method<global::GrpcEchoService.GetResultRequest, global::GrpcEchoService.GetEventResultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEventResult",
        __Marshaller_loss_GetResultRequest,
        __Marshaller_loss_GetEventResultResponse);

    static readonly grpc::Method<global::GrpcEchoService.CountIntegerRequest, global::GrpcEchoService.CountIntegerResponse> __Method_CountInteger = new grpc::Method<global::GrpcEchoService.CountIntegerRequest, global::GrpcEchoService.CountIntegerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CountInteger",
        __Marshaller_loss_CountIntegerRequest,
        __Marshaller_loss_CountIntegerResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcEchoService.LossReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Loss</summary>
    [grpc::BindServiceMethod(typeof(Loss), "BindService")]
    public abstract partial class LossBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GrpcEchoService.GetEventResultResponse> GetEventResult(global::GrpcEchoService.GetResultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcEchoService.CountIntegerResponse> CountInteger(global::GrpcEchoService.CountIntegerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(LossBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetEventResult, serviceImpl.GetEventResult)
          .AddMethod(__Method_CountInteger, serviceImpl.CountInteger).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LossBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetEventResult, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcEchoService.GetResultRequest, global::GrpcEchoService.GetEventResultResponse>(serviceImpl.GetEventResult));
      serviceBinder.AddMethod(__Method_CountInteger, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcEchoService.CountIntegerRequest, global::GrpcEchoService.CountIntegerResponse>(serviceImpl.CountInteger));
    }

  }
}
#endregion
